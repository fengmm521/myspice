#-*- coding: utf-8 -*-from PIL import Imageimport os,sys,shutil,json#获取当前脚本所在路径def cur_file_dir():    path = sys.path[0]    if os.path.isdir(path):        return path    elif os.path.isfile(path):        return os.path.dirname(path)#获取父目录def GetParentPath(strPath):    if not strPath:        return None;        lsPath = os.path.split(strPath);    if lsPath[1]:        return lsPath[0];        lsPath = os.path.split(lsPath[0]);    return lsPath[0];    #获取目录中特定格式的所有文件路径,输入资源根路径及扩展名(扩展名要代点,如".png"),返回多维数组,[资源相对路径,资源路径,资源名]def getAllFileWithPath(path,ex):    jsondir = path    filelist = []    for root, _dirs, files in os.walk(jsondir):        for filex in files:                      print filex            name,text = os.path.splitext(filex)            if cmp(text,ex) == 0:                jsonArr = []                rootdir = path                dirx = root[len(rootdir):]                pathName = dirx + os.sep +filex                jsonArr.append(pathName)                (newPath,_name) = os.path.split(pathName)                jsonArr.append(newPath)                jsonArr.append(name)                filelist.append(jsonArr)    return filelistdef savePoints(pos,pngname):    if len(pos) == 0:        return    jsonpo = json.dumps(pos)    f = open('points.txt','a')    f.write(pngname[20:] + '=' +str(jsonpo)+'\n')    f.close()def getImagePiex(imgpath):    im = Image.open(imgpath)    width = im.size[0]      height = im.size[1]      print "/* width:%d */"%(width)      print "/* height:%d */"%(height)    imdat = im.getdata()    print "img", imdat[0],len(imdat)    #引脚坐标    pints = []#box变量是一个四元组(左，上，右，下)    l = 0    u = 0    r = 0    d = 0      #引脚坐标大小,每一个器件，引脚坐标再加64作为这个器件大小    rl = 0    ru = 0    rr = 0    rd = 0    for t in range(len(imdat)):        if not imdat[t][3] == 0:            y = t/width            x = t%width            if u == 0 or y < u:                u = y            if d == 0 or y > d:                d = y            if l == 0 or x < l:                l = x            if r == 0 or x > r:                r = x            if imdat[t][0] == 255 and imdat[t][1] == 0 and imdat[t][2] == 0:                if ru == 0 or y < ru:                    ru = y                if rd == 0 or y > rd:                    rd = y                if rl == 0 or x < rl:                    rl = x                if rr == 0 or x > rr:                    rr = x                potmp = {'x':x,'y':y}                pints.append(potmp)    imgbox = (l,u,r,d)    if (rl == 0 and ru == 0 and rr == 0 and rd == 0):        imgboxred = imgbox    else:        imgboxred = (rl-64,ru-64,rr+64,rd+64)#有红点的位置    print imgbox    print imgboxred    #region = im.crop(imgbox)     region = im.crop(imgboxred)     npoints = []    for p in pints:        tmp = {'x':(p['x']-imgboxred[0]),'y':(imgboxred[3]-imgboxred[1]) - (p['y']-imgboxred[1])}        npoints.append(tmp)    return region,npointsdef renameForImage(imgpath):    im = Image.open(imgpath)    return imdef removeDirTree(pdir):    if os.path.exists(pdir):        shutil.rmtree(pdir)#删除目录及子子目录def saveImageToPath(img,filepath):    tmppath,filename = os.path.split(filepath)    nfilename = filename[20:]    print nfilename    npath = tmppath + os.sep + nfilename    print npath    print tmppath    if os.path.exists(tmppath) == False:            os.makedirs(tmppath)    img.save(npath)def conventCastImageWithImageList(oldpath,outpath):    ppath = GetParentPath(cur_file_dir())    imgpath = ppath + os.sep + oldpath    imglist = getAllFileWithPath(imgpath, '.png')    for cimg in imglist:        imgtmp = imgpath + cimg[0]        print imgtmp        img = renameForImage(imgtmp)        newPath = ppath + os.sep + outpath +os.sep + cimg[2] + '.png'        print newPath        saveImageToPath(img, newPath)        print 'img %s ok...'%(cimg[2] + '.png')#主方法def main():    mainpath = cur_file_dir()    print mainpath    conventCastImageWithImageList('uiimg','out')if __name__ == '__main__':    main()